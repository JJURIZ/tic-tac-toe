Using this file to keep track of progress on the game.

Initially this code was in app.js for testing purposes. 
In order to streamline yet maintain the steps/research I did, test code and comments are moved here.
Copy/Paste will be chronolgical to track my thinking process throughout the exercise. 

// Step one - ability to update an array within an array.
board[0][1] = 1;
board[0][2] = 0;
console.log(board);
// Success
// NOTE: This seems to be useless and I don't think I'll be able to use it. 

// Testing ability to reduce numeric values in an array. 
board[0][1] = 1;
console.log(board[0].reduce((acc, curVal) => acc + curVal));
// Success
// NOTE: Again, probably completely useless. 

// Double checking it all
board[1][0] = 10;
board[1][1] = 10;
board[1][2] = 10;

console.log(board[1]);
console.log(board[1].reduce((acc, curVal) => acc + curVal));
// Success

// Test comparison method. Currently thinking I will replace board array contents with a numeric value 
// (1 for player 1, 10 for player 2).
// Check will test for values. If total = 3 || 30, a player has won. 

    let testBoard = [
        [1,1,10],
        [10,10,10]
    ];

    const winnerCheck = () => {
        for (let i=0; i < testBoard.length; i++) {
            if (testBoard[i].reduce((acc, curVal) => acc + curVal) === 3) {
                console.log("Player 1 wins!")
            } else if (testBoard[i].reduce((acc, curVal) => acc + curVal) === 30) {
                console.log("Player 2 wins!")
            } else {
                continue;
            }
        }  
    }
       
console.log(winnerCheck());

// Success

// Register a click in a box
c1.addEventListener('click', function(){
    console.log("I've been clicked!")
})

c2.addEventListener('click', function(){
    console.log("I've also been clicked!")
})

c3.addEventListener('click', function(){
    console.log("Me three!")
})

//Success

***Next Day***
After reviewing class material realized I needed to create an array to hold user's selections.
Initially I thought I could update an array of arrays with the player's selection but this proved impossible for me.
Essentially I will use this array like an object, with the index as the key and player's symbol as the value.
This array can be compared to the winningArray which contains the 8 possible combination of wins.
If a player has their symbol in each of the indexes for a particular array, they are declared winner.
I also need to identify where the user has clicked. That click needs to correspond to the location in the array containing the 
current board. 
I need to render the current board selections to the screen. 

// This tripped me up to no end. Rome gave me some outstanding advice and I moved to clicks on each box rather than 
//  on the container. 
// document.querySelector(".box_container").addEventListener("click", function(event){
//     return Number.parseInt(event.target.id.replace('box',''));
//  });

